N <= 10M, because the execution with 100M takes too much time and > 8GB of memory.
K = {2, 3, 5}
Q = 10000
T = 30 because for one Tree of 10M nodes it takes 15 seg. (30 T aprox 9 min)



for each K {
  for each Type of Tree {
    generateFile(K,Type) 
    for(i = 1M; i <= 10M; ++1M) {
      cout << i <<  ' ';
      for(j = 0; j < T; ++j) {
        oneTreeAvgNodesVisited = 0
        for(t = 0; t < Q; ++t) {
          oneTreeAvgNodesVisited += curNodesVisited
        }
        oneTreeAvgNodesVisited /= Q
        cout << oneTreeAvgNodesVisited << ' ';
      }

      cout << endl;
    }


  }
}

Ha de ser un model aleatori
si K es mes gran mes precis es el valor que hem de trobar 

Estudiar, com es comporta el comportament del cost quan es creix K
Numero de n;
1000<=n <=100.000 o 50.000 pero com mes gran sigui el nÃºmero millor.  Cuando la n es muy grande lo mas probable que la funcion sea lineal
menys de 1000 es petit,fins i tot 1000 no es un numero molt gran n^(x) x es asimptotic
salts de 5000 o 2000
